// Code generated by enums_test.go, DO NOT EDIT.

package astdb

type AstBool string

const (
	AstBool0     AstBool = "0"
	AstBool1     AstBool = "1"
	AstBoolFalse AstBool = "false"
	AstBoolNo    AstBool = "no"
	AstBoolOff   AstBool = "off"
	AstBoolOn    AstBool = "on"
	AstBoolTrue  AstBool = "true"
	AstBoolYes   AstBool = "yes"
)

type IaxEncryption string

const (
	IaxEncryptionAes128 IaxEncryption = "aes128"
	IaxEncryptionNo     IaxEncryption = "no"
	IaxEncryptionYes    IaxEncryption = "yes"
)

type IaxRequirecalltoken string

const (
	IaxRequirecalltokenAuto IaxRequirecalltoken = "auto"
	IaxRequirecalltokenNo   IaxRequirecalltoken = "no"
	IaxRequirecalltokenYes  IaxRequirecalltoken = "yes"
)

type IaxTransfer string

const (
	IaxTransferMediaonly IaxTransfer = "mediaonly"
	IaxTransferNo        IaxTransfer = "no"
	IaxTransferYes       IaxTransfer = "yes"
)

type MohMode string

const (
	MohModeCustom     MohMode = "custom"
	MohModeFiles      MohMode = "files"
	MohModeMp3Nb      MohMode = "mp3nb"
	MohModePlaylist   MohMode = "playlist"
	MohModeQuietmp3   MohMode = "quietmp3"
	MohModeQuietmp3Nb MohMode = "quietmp3nb"
)

type Pjsip100Rel string

const (
	Pjsip100RelNo       Pjsip100Rel = "no"
	Pjsip100RelRequired Pjsip100Rel = "required"
	Pjsip100RelYes      Pjsip100Rel = "yes"
)

type PjsipAuthType string

const (
	PjsipAuthTypeGoogleOauth PjsipAuthType = "google_oauth"
	PjsipAuthTypeMd5         PjsipAuthType = "md5"
	PjsipAuthTypeUserpass    PjsipAuthType = "userpass"
)

type PjsipCidPrivacy string

const (
	PjsipCidPrivacyAllowed               PjsipCidPrivacy = "allowed"
	PjsipCidPrivacyAllowedFailedScreened PjsipCidPrivacy = "allowed_failed_screened"
	PjsipCidPrivacyAllowedNotScreened    PjsipCidPrivacy = "allowed_not_screened"
	PjsipCidPrivacyAllowedPassedScreened PjsipCidPrivacy = "allowed_passed_screened"
	PjsipCidPrivacyProhib                PjsipCidPrivacy = "prohib"
	PjsipCidPrivacyProhibFailedScreened  PjsipCidPrivacy = "prohib_failed_screened"
	PjsipCidPrivacyProhibNotScreened     PjsipCidPrivacy = "prohib_not_screened"
	PjsipCidPrivacyProhibPassedScreened  PjsipCidPrivacy = "prohib_passed_screened"
	PjsipCidPrivacyUnavailable           PjsipCidPrivacy = "unavailable"
)

type PjsipConnectedLineMethod string

const (
	PjsipConnectedLineMethodInvite   PjsipConnectedLineMethod = "invite"
	PjsipConnectedLineMethodReinvite PjsipConnectedLineMethod = "reinvite"
	PjsipConnectedLineMethodUpdate   PjsipConnectedLineMethod = "update"
)

type PjsipDirectMediaGlareMitigation string

const (
	PjsipDirectMediaGlareMitigationIncoming PjsipDirectMediaGlareMitigation = "incoming"
	PjsipDirectMediaGlareMitigationNone     PjsipDirectMediaGlareMitigation = "none"
	PjsipDirectMediaGlareMitigationOutgoing PjsipDirectMediaGlareMitigation = "outgoing"
)

type PjsipDtlsSetup string

const (
	PjsipDtlsSetupActive  PjsipDtlsSetup = "active"
	PjsipDtlsSetupActpass PjsipDtlsSetup = "actpass"
	PjsipDtlsSetupPassive PjsipDtlsSetup = "passive"
)

type PjsipDtmfMode string

const (
	PjsipDtmfModeAuto     PjsipDtmfMode = "auto"
	PjsipDtmfModeAutoInfo PjsipDtmfMode = "auto_info"
	PjsipDtmfModeInband   PjsipDtmfMode = "inband"
	PjsipDtmfModeInfo     PjsipDtmfMode = "info"
	PjsipDtmfModeRfc4733  PjsipDtmfMode = "rfc4733"
)

type PjsipIdentifyBy string

const (
	PjsipIdentifyByAuthUsername PjsipIdentifyBy = "auth_username"
	PjsipIdentifyByIp           PjsipIdentifyBy = "ip"
	PjsipIdentifyByUsername     PjsipIdentifyBy = "username"
)

type PjsipMediaEncryption string

const (
	PjsipMediaEncryptionDtls PjsipMediaEncryption = "dtls"
	PjsipMediaEncryptionNo   PjsipMediaEncryption = "no"
	PjsipMediaEncryptionSdes PjsipMediaEncryption = "sdes"
)

type PjsipRedirectMethod string

const (
	PjsipRedirectMethodUriCore  PjsipRedirectMethod = "uri_core"
	PjsipRedirectMethodUriPjsip PjsipRedirectMethod = "uri_pjsip"
	PjsipRedirectMethodUser     PjsipRedirectMethod = "user"
)

type PjsipT38UdptlEc string

const (
	PjsipT38UdptlEcFec        PjsipT38UdptlEc = "fec"
	PjsipT38UdptlEcNone       PjsipT38UdptlEc = "none"
	PjsipT38UdptlEcRedundancy PjsipT38UdptlEc = "redundancy"
)

type PjsipTaskprocessorOverloadTrigger string

const (
	PjsipTaskprocessorOverloadTriggerGlobal    PjsipTaskprocessorOverloadTrigger = "global"
	PjsipTaskprocessorOverloadTriggerNone      PjsipTaskprocessorOverloadTrigger = "none"
	PjsipTaskprocessorOverloadTriggerPjsipOnly PjsipTaskprocessorOverloadTrigger = "pjsip_only"
)

type PjsipTimer string

const (
	PjsipTimerForced   PjsipTimer = "forced"
	PjsipTimerNo       PjsipTimer = "no"
	PjsipTimerRequired PjsipTimer = "required"
	PjsipTimerYes      PjsipTimer = "yes"
)

type PjsipTransportMethod string

const (
	PjsipTransportMethodDefault     PjsipTransportMethod = "default"
	PjsipTransportMethodSslv2       PjsipTransportMethod = "sslv2"
	PjsipTransportMethodSslv23      PjsipTransportMethod = "sslv23"
	PjsipTransportMethodSslv3       PjsipTransportMethod = "sslv3"
	PjsipTransportMethodTlsv1       PjsipTransportMethod = "tlsv1"
	PjsipTransportMethodUnspecified PjsipTransportMethod = "unspecified"
)

type PjsipTransportProtocol string

const (
	PjsipTransportProtocolFlow PjsipTransportProtocol = "flow"
	PjsipTransportProtocolTcp  PjsipTransportProtocol = "tcp"
	PjsipTransportProtocolTls  PjsipTransportProtocol = "tls"
	PjsipTransportProtocolUdp  PjsipTransportProtocol = "udp"
	PjsipTransportProtocolWs   PjsipTransportProtocol = "ws"
	PjsipTransportProtocolWss  PjsipTransportProtocol = "wss"
)

type QueueAutopause string

const (
	QueueAutopauseAll QueueAutopause = "all"
	QueueAutopauseNo  QueueAutopause = "no"
	QueueAutopauseYes QueueAutopause = "yes"
)

type QueueStrategy string

const (
	QueueStrategyFewestcalls QueueStrategy = "fewestcalls"
	QueueStrategyLeastrecent QueueStrategy = "leastrecent"
	QueueStrategyLinear      QueueStrategy = "linear"
	QueueStrategyRandom      QueueStrategy = "random"
	QueueStrategyRingall     QueueStrategy = "ringall"
	QueueStrategyRrmemory    QueueStrategy = "rrmemory"
	QueueStrategyRrordered   QueueStrategy = "rrordered"
	QueueStrategyWrandom     QueueStrategy = "wrandom"
)

type ShaHash string

const (
	ShaHashSHA1   ShaHash = "SHA-1"
	ShaHashSHA256 ShaHash = "SHA-256"
)

type SipCallingpres string

const (
	SipCallingpresAllowed             SipCallingpres = "allowed"
	SipCallingpresAllowedFailedScreen SipCallingpres = "allowed_failed_screen"
	SipCallingpresAllowedNotScreened  SipCallingpres = "allowed_not_screened"
	SipCallingpresAllowedPassedScreen SipCallingpres = "allowed_passed_screen"
	SipCallingpresProhib              SipCallingpres = "prohib"
	SipCallingpresProhibFailedScreen  SipCallingpres = "prohib_failed_screen"
	SipCallingpresProhibNotScreened   SipCallingpres = "prohib_not_screened"
	SipCallingpresProhibPassedScreen  SipCallingpres = "prohib_passed_screen"
)

type SipDirectmedia string

const (
	SipDirectmediaNo       SipDirectmedia = "no"
	SipDirectmediaNonat    SipDirectmedia = "nonat"
	SipDirectmediaOutgoing SipDirectmedia = "outgoing"
	SipDirectmediaUpdate   SipDirectmedia = "update"
	SipDirectmediaYes      SipDirectmedia = "yes"
)

type SipDtmfmode string

const (
	SipDtmfmodeAuto      SipDtmfmode = "auto"
	SipDtmfmodeInband    SipDtmfmode = "inband"
	SipDtmfmodeInfo      SipDtmfmode = "info"
	SipDtmfmodeRfc2833   SipDtmfmode = "rfc2833"
	SipDtmfmodeShortinfo SipDtmfmode = "shortinfo"
)

type SipPeerType string

const (
	SipPeerTypeFriend SipPeerType = "friend"
	SipPeerTypePeer   SipPeerType = "peer"
	SipPeerTypeUser   SipPeerType = "user"
)

type SipProgressinband string

const (
	SipProgressinbandNever SipProgressinband = "never"
	SipProgressinbandNo    SipProgressinband = "no"
	SipProgressinbandYes   SipProgressinband = "yes"
)

type SipSessionRefresher string

const (
	SipSessionRefresherUac SipSessionRefresher = "uac"
	SipSessionRefresherUas SipSessionRefresher = "uas"
)

type SipSessionTimers string

const (
	SipSessionTimersAccept    SipSessionTimers = "accept"
	SipSessionTimersOriginate SipSessionTimers = "originate"
	SipSessionTimersRefuse    SipSessionTimers = "refuse"
)

type SipTransport string

const (
	SipTransportTcp SipTransport = "tcp"
	SipTransportTls SipTransport = "tls"
	SipTransportUdp SipTransport = "udp"
	SipTransportWs  SipTransport = "ws"
	SipTransportWss SipTransport = "wss"
)

type YesNo string

const (
	YesNoNo  YesNo = "no"
	YesNoYes YesNo = "yes"
)

func (e AstBool) String() string {
	return string(e)
}
func (AstBool) Values() []string {
	return []string{
		"0",
		"1",
		"false",
		"no",
		"off",
		"on",
		"true",
		"yes",
	}
}

func (e IaxEncryption) String() string {
	return string(e)
}
func (IaxEncryption) Values() []string {
	return []string{
		"aes128",
		"no",
		"yes",
	}
}

func (e IaxRequirecalltoken) String() string {
	return string(e)
}
func (IaxRequirecalltoken) Values() []string {
	return []string{
		"auto",
		"no",
		"yes",
	}
}

func (e IaxTransfer) String() string {
	return string(e)
}
func (IaxTransfer) Values() []string {
	return []string{
		"mediaonly",
		"no",
		"yes",
	}
}

func (e MohMode) String() string {
	return string(e)
}
func (MohMode) Values() []string {
	return []string{
		"custom",
		"files",
		"mp3nb",
		"playlist",
		"quietmp3",
		"quietmp3nb",
	}
}

func (e Pjsip100Rel) String() string {
	return string(e)
}
func (Pjsip100Rel) Values() []string {
	return []string{
		"no",
		"required",
		"yes",
	}
}

func (e PjsipAuthType) String() string {
	return string(e)
}
func (PjsipAuthType) Values() []string {
	return []string{
		"google_oauth",
		"md5",
		"userpass",
	}
}

func (e PjsipCidPrivacy) String() string {
	return string(e)
}
func (PjsipCidPrivacy) Values() []string {
	return []string{
		"allowed",
		"allowed_failed_screened",
		"allowed_not_screened",
		"allowed_passed_screened",
		"prohib",
		"prohib_failed_screened",
		"prohib_not_screened",
		"prohib_passed_screened",
		"unavailable",
	}
}

func (e PjsipConnectedLineMethod) String() string {
	return string(e)
}
func (PjsipConnectedLineMethod) Values() []string {
	return []string{
		"invite",
		"reinvite",
		"update",
	}
}

func (e PjsipDirectMediaGlareMitigation) String() string {
	return string(e)
}
func (PjsipDirectMediaGlareMitigation) Values() []string {
	return []string{
		"incoming",
		"none",
		"outgoing",
	}
}

func (e PjsipDtlsSetup) String() string {
	return string(e)
}
func (PjsipDtlsSetup) Values() []string {
	return []string{
		"active",
		"actpass",
		"passive",
	}
}

func (e PjsipDtmfMode) String() string {
	return string(e)
}
func (PjsipDtmfMode) Values() []string {
	return []string{
		"auto",
		"auto_info",
		"inband",
		"info",
		"rfc4733",
	}
}

func (e PjsipIdentifyBy) String() string {
	return string(e)
}
func (PjsipIdentifyBy) Values() []string {
	return []string{
		"auth_username",
		"ip",
		"username",
	}
}

func (e PjsipMediaEncryption) String() string {
	return string(e)
}
func (PjsipMediaEncryption) Values() []string {
	return []string{
		"dtls",
		"no",
		"sdes",
	}
}

func (e PjsipRedirectMethod) String() string {
	return string(e)
}
func (PjsipRedirectMethod) Values() []string {
	return []string{
		"uri_core",
		"uri_pjsip",
		"user",
	}
}

func (e PjsipT38UdptlEc) String() string {
	return string(e)
}
func (PjsipT38UdptlEc) Values() []string {
	return []string{
		"fec",
		"none",
		"redundancy",
	}
}

func (e PjsipTaskprocessorOverloadTrigger) String() string {
	return string(e)
}
func (PjsipTaskprocessorOverloadTrigger) Values() []string {
	return []string{
		"global",
		"none",
		"pjsip_only",
	}
}

func (e PjsipTimer) String() string {
	return string(e)
}
func (PjsipTimer) Values() []string {
	return []string{
		"forced",
		"no",
		"required",
		"yes",
	}
}

func (e PjsipTransportMethod) String() string {
	return string(e)
}
func (PjsipTransportMethod) Values() []string {
	return []string{
		"default",
		"sslv2",
		"sslv23",
		"sslv3",
		"tlsv1",
		"unspecified",
	}
}

func (e PjsipTransportProtocol) String() string {
	return string(e)
}
func (PjsipTransportProtocol) Values() []string {
	return []string{
		"flow",
		"tcp",
		"tls",
		"udp",
		"ws",
		"wss",
	}
}

func (e QueueAutopause) String() string {
	return string(e)
}
func (QueueAutopause) Values() []string {
	return []string{
		"all",
		"no",
		"yes",
	}
}

func (e QueueStrategy) String() string {
	return string(e)
}
func (QueueStrategy) Values() []string {
	return []string{
		"fewestcalls",
		"leastrecent",
		"linear",
		"random",
		"ringall",
		"rrmemory",
		"rrordered",
		"wrandom",
	}
}

func (e ShaHash) String() string {
	return string(e)
}
func (ShaHash) Values() []string {
	return []string{
		"SHA-1",
		"SHA-256",
	}
}

func (e SipCallingpres) String() string {
	return string(e)
}
func (SipCallingpres) Values() []string {
	return []string{
		"allowed",
		"allowed_failed_screen",
		"allowed_not_screened",
		"allowed_passed_screen",
		"prohib",
		"prohib_failed_screen",
		"prohib_not_screened",
		"prohib_passed_screen",
	}
}

func (e SipDirectmedia) String() string {
	return string(e)
}
func (SipDirectmedia) Values() []string {
	return []string{
		"no",
		"nonat",
		"outgoing",
		"update",
		"yes",
	}
}

func (e SipDtmfmode) String() string {
	return string(e)
}
func (SipDtmfmode) Values() []string {
	return []string{
		"auto",
		"inband",
		"info",
		"rfc2833",
		"shortinfo",
	}
}

func (e SipPeerType) String() string {
	return string(e)
}
func (SipPeerType) Values() []string {
	return []string{
		"friend",
		"peer",
		"user",
	}
}

func (e SipProgressinband) String() string {
	return string(e)
}
func (SipProgressinband) Values() []string {
	return []string{
		"never",
		"no",
		"yes",
	}
}

func (e SipSessionRefresher) String() string {
	return string(e)
}
func (SipSessionRefresher) Values() []string {
	return []string{
		"uac",
		"uas",
	}
}

func (e SipSessionTimers) String() string {
	return string(e)
}
func (SipSessionTimers) Values() []string {
	return []string{
		"accept",
		"originate",
		"refuse",
	}
}

func (e SipTransport) String() string {
	return string(e)
}
func (SipTransport) Values() []string {
	return []string{
		"tcp",
		"tls",
		"udp",
		"ws",
		"wss",
	}
}

func (e YesNo) String() string {
	return string(e)
}
func (YesNo) Values() []string {
	return []string{
		"no",
		"yes",
	}
}
